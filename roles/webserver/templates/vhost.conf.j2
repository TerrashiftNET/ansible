server {
  listen {{ http_port }};
  server_name {{ item.key }};
{% if item.value.aliases is defined %}
  server_name {{ item.value.aliases|join(" ")}};
{% endif %}

  return 301 https://$host$request_uri;
}

server {
  listen {{ https_port }} ssl http2;
  server_name {{ item.key }};
{% if item.value.aliases is defined %}
  server_name {{ item.value.aliases|join(" ")}};
{% endif %}

  ssl_certificate /etc/letsencrypt/live/terrashift.net/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/terrashift.net/privkey.pem;

{% if item.value.doc_root is defined %}
  root /home/www/{{ item.key }}/{{ item.value.doc_root }};
{% else %}
  root /home/www/{{ item.key }}/;
{% endif %}
  index index.php index.html;

{% if item.value.redirect is defined %}
  return 301 {{ item.value.redirect }};
{% endif %}
{% if item.value.www_redirect is defined %}
  if ($host !~* ^www\.) {
    return 301 https://www.$host$request_uri;
  }
{% endif %}

  access_log /var/log/nginx/{{ item.key }}-access-json.log json_access;
  error_log /var/log/nginx/{{ item.key }}-error.log error;

  client_max_body_size 100m;
  client_body_timeout 120s;

  sendfile off;

  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Robots-Tag none;
  add_header Content-Security-Policy "frame-ancestors 'self'";
  add_header X-Frame-Options DENY;
  add_header Referrer-Policy same-origin;

{% if item.value.proxy is defined %}
  location ~ / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

  {% if item.value.websocket is defined %}
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  {% endif %}
  {% if item.value.proxy.ip is defined %}
    proxy_pass http://{{ item.value.proxy.ip }}:{{ item.value.proxy.port }};
  {% else %}
    proxy_pass http://localhost:{{ item.value.proxy.port }};
  {% endif %}
  }
{% endif %}

  location / {
{% if item.value.php_fpm is defined %}
      try_files $uri $uri/ /index.php?$query_string;
{% else %}
      try_files $uri $uri/ =404;
{% endif %}
  }

{% if item.value.php_fpm is defined %}
  location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/run/php/{{ item.value.php_fpm }}-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param PHP_VALUE "upload_max_filesize = 100M \n post_max_size=100M";
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param HTTP_PROXY "";
      fastcgi_intercept_errors off;
      fastcgi_buffer_size 16k;
      fastcgi_buffers 4 16k;
      fastcgi_connect_timeout 300;
      fastcgi_send_timeout 300;
      fastcgi_read_timeout 300;
      include /etc/nginx/fastcgi_params;
  }
{% endif %}
{% if item.value.downloads is defined %}
  location ~ ^/downloads/ {
    root /home/www/{{ item.key }}/;
    fancyindex on;
    fancyindex_exact_size off;
    fancyindex_hide_parentdir on;
  }
{% endif %}
}
